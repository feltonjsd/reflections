What happens when you initialize a repository? Why do you need to do it?

	It creates a .git file which is hidden metadata. This allows you to store files in a git repository.
	
How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area stores files to be commited to the repository
	The working area stores all files.
	
How can you use the staging area to make sure you have one commit per logical change?

	Add each file to the staging area in turn and commit seperatly
	
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	branches can help with experimental code or code of different/older versions.
	
How do the diagrams help you visualize the branch structure?

	They help by being able to see all of the different branches and the commits that make them up.
	
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	All the commits from the 2 branches are held in one branch. The diagram helps to see which commits are being merged from which branches.
	
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

		automatic merging 
			pros : non conflicst are merged automatically so quicker and easier
			cons : conflicts have to me manually merged
			
		manual merging 
			pros : more control over what code gets merged
			cons : more time consuming for non conflicts which could be automatically merged